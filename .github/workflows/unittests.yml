# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: "release"}
          - {os: ubuntu-20.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Please jaspTools on macOS
        if : runner.os == 'macOS'
        run: |
          path <- file.path("~", "Frameworks", "R.framework", "Versions")
          dir.create(path, recursive = TRUE)
          txt <- sprintf(".libPaths(\"%s\")", path)
          file.create("~/.Makevars")
          fileConn <- file("~/.Makevars")
          writeLines(txt, fileConn)
          close(fileConn)
        shell: Rscript {0}

      - name: Query dependencies
        env:
          R_REMOTES_UPGRADE: never
        run: |
          print(.libPaths())
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "20.04"), sep = "\n")')

      - name: Install dependencies
        env:
          R_REMOTES_UPGRADE: never
        run: |
          remotes::install_github("jasp-stats/jaspTools")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Unit tests
        run: |
          if (!grepl("linux", version$os)) {
            print("on macOS")
            Sys.setenv(REQUIRED_PKGS = .libPaths()[1])
          } else {
            print("on linux")
          }
          source("tests/testthat.R")
        shell: Rscript {0}
